@mixin define-color($name, $color, $color-text: '') {
  --bce-color-#{$name}-l: #{lighten($color, 10%)};
  --bce-color-#{$name}-n: #{$color};
  --bce-color-#{$name}-d: #{darken($color, 10%)};

  @if $color-text != '' {
    --bce-color-#{$name}-t: #{$color-text};
  }
}

@mixin bce-color($name) {
  --bce-color-#{$name}-l: #{bce-color(primary, 'l')};
  --bce-color-#{$name}-n: #{bce-color(primary, 'n')};
  --bce-color-#{$name}-d: #{bce-color(primary, 'd')};
  --bce-color-#{$name}-t: #{bce-color(primary, 't')};

  @each $current in (tertiary secondary primary) {
    &[color='#{$current}'] {
      --bce-color-#{$name}-l: #{bce-color($current, 'l')};
      --bce-color-#{$name}-n: #{bce-color($current, 'n')};
      --bce-color-#{$name}-d: #{bce-color($current, 'd')};
      --bce-color-#{$name}-t: #{bce-color($current, 't')};
    }
  }
}

@function bce-color($name, $modifier: 'n') {
  @return unquote('var(--bce-color-#{$name}-#{$modifier})');
}

@function bce-color-t($name) {
  @return bce-color($name, 't');
}

@function bce-color-l($name) {
  @return bce-color($name, 'l');
}

@function bce-color-d($name) {
  @return bce-color($name, 'd');
}
